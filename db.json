{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/meilidu/source/css/archive.styl","path":"css/archive.styl","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/footer.styl","path":"css/footer.styl","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/article.styl","path":"css/article.styl","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/headers.styl","path":"css/headers.styl","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/scrollbar.styl","path":"css/scrollbar.styl","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/header.styl","path":"css/header.styl","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/underline.styl","path":"css/underline.styl","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/variables.styl","path":"css/variables.styl","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/meilidu/source/img/header.jpg","path":"img/header.jpg","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/fonts/Inconsolata/Inconsolata-Bold.ttf","path":"css/fonts/Inconsolata/Inconsolata-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/fonts/Noto_Serif/LICENSE.txt","path":"css/fonts/Noto_Serif/LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/fonts/Noto_Sans/LICENSE.txt","path":"css/fonts/Noto_Sans/LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/fonts/Inconsolata/Inconsolata-Regular.ttf","path":"css/fonts/Inconsolata/Inconsolata-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/fonts/Noto_Serif/NotoSerif-BoldItalic.ttf","path":"css/fonts/Noto_Serif/NotoSerif-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/fonts/Noto_Serif/NotoSerif-Bold.ttf","path":"css/fonts/Noto_Serif/NotoSerif-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/fonts/Noto_Serif/NotoSerif-Regular.ttf","path":"css/fonts/Noto_Serif/NotoSerif-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/fonts/Noto_Serif/NotoSerif-Italic.ttf","path":"css/fonts/Noto_Serif/NotoSerif-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/fonts/Noto_Sans/NotoSans-Bold.ttf","path":"css/fonts/Noto_Sans/NotoSans-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/fonts/Noto_Sans/NotoSans-BoldItalic.ttf","path":"css/fonts/Noto_Sans/NotoSans-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/fonts/Noto_Sans/NotoSans-Italic.ttf","path":"css/fonts/Noto_Sans/NotoSans-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/meilidu/source/css/fonts/Noto_Sans/NotoSans-Regular.ttf","path":"css/fonts/Noto_Sans/NotoSans-Regular.ttf","modified":0,"renderable":1}],"Cache":[{"_id":"themes/meilidu/.travis.yml","hash":"2546a97545fed1c52ca66acd2e2d8dd3f9a66134","modified":1489487890093},{"_id":"themes/meilidu/.gitignore","hash":"1ba6be65509b4ba3773c8ddf1d747fc7afb6a60d","modified":1489487890088},{"_id":"themes/meilidu/_config.yml","hash":"d514e142a20bc44270034ecc96807bf3cd235a4f","modified":1489487890102},{"_id":"themes/meilidu/README.md","hash":"62dd97075c8cefc2e12aa2244b1840ad7616c598","modified":1489487890098},{"_id":"source/_posts/Document-Your-Journey.md","hash":"25720a0712198fc774e330643d40c6dff196e599","modified":1489503272347},{"_id":"source/_posts/Elegant-Code.md","hash":"3c706d67a50bde6ff0e39ea6ad4da3885a0227a1","modified":1489503293363},{"_id":"source/_posts/Learning-to-Learn.md","hash":"b7341d67d655e917c706035671d4ab4ae70ae9c7","modified":1489503382370},{"_id":"source/_posts/Start-the-Beginning.md","hash":"08ff934cfc9aa44117f32ffee72c9e19b3e8d0e0","modified":1489503241780},{"_id":"themes/meilidu/layout/archive.ejs","hash":"3bcb0f3a694b02237fd579c7723a0cf32497802c","modified":1489487890178},{"_id":"source/about/index.md","hash":"40bd0105f6c979260019f107db3a825ab59b29a8","modified":1489488903965},{"_id":"themes/meilidu/layout/footer.ejs","hash":"d1c2d66b3f17a18abc8cb90e926844ed602d132d","modified":1489487890191},{"_id":"themes/meilidu/layout/category.ejs","hash":"23b54352d0909be74c9a5453db9a2fc23b9efabc","modified":1489487890187},{"_id":"themes/meilidu/layout/index.ejs","hash":"0568fa77909165af18bfd52e1fad81884c64fcb1","modified":1489487890195},{"_id":"themes/meilidu/layout/layout.ejs","hash":"5bf27170fd41ac15d17247c3c40c6a2b91a5e50f","modified":1489487890200},{"_id":"themes/meilidu/layout/categories.ejs","hash":"a49251ab43e185234ecd3f57a8d6aa3c379b1eb7","modified":1489487890183},{"_id":"themes/meilidu/layout/page.ejs","hash":"a0e2d211a8eb193c7c16609a1e6c9a8504f5068b","modified":1489487890204},{"_id":"themes/meilidu/layout/post.ejs","hash":"7a44c20f28b60f80ad3bff3b0a7355d68ca76c41","modified":1489487890208},{"_id":"themes/meilidu/layout/tag.ejs","hash":"97b961e5b255b9aa709abcecc6c6fb4613726170","modified":1489487890222},{"_id":"themes/meilidu/scripts/imageCaption.js","hash":"0bf98db98247d09db183cd7328def63e89423ba7","modified":1489487890233},{"_id":"themes/meilidu/layout/tags.ejs","hash":"dd48c57c4c5ea31b23c3eee9a2835ce68a80a368","modified":1489487890226},{"_id":"themes/meilidu/layout/_widgets/greeting.ejs","hash":"888b2ca061292034fb5f630d6ea0a801e83d7bdb","modified":1489487890168},{"_id":"themes/meilidu/layout/_widgets/site_links.ejs","hash":"d564131141244e48c9394c1f929b4cf43aee062f","modified":1489487890174},{"_id":"themes/meilidu/source/css/archive.styl","hash":"bc7811550d897ebb14cb911699fc0a2ea4ad2205","modified":1489487890246},{"_id":"themes/meilidu/source/css/footer.styl","hash":"ced5cd4b04a80d246b052f5d49605615c237914f","modified":1489487890385},{"_id":"themes/meilidu/source/css/article.styl","hash":"ea479755702fe6ecfd1c5df5c3b2625d82bca47c","modified":1489487890252},{"_id":"themes/meilidu/source/css/headers.styl","hash":"76e4d7efc1cc038395cb7e8da6233754e50ac152","modified":1489487890394},{"_id":"themes/meilidu/source/css/scrollbar.styl","hash":"bccaaa71b3b5980fbc37b500d56179d087fbf049","modified":1489487890402},{"_id":"themes/meilidu/source/css/header.styl","hash":"f9d1b18e26996f4c82267c7f159e484d001043f0","modified":1489487890390},{"_id":"themes/meilidu/source/css/underline.styl","hash":"5bb87e235762148e9bbe00f8a2eae54a0e35e3e4","modified":1489487890411},{"_id":"themes/meilidu/source/css/highlight.styl","hash":"5cd776db05a828c8185d92eb98284decbb1e5289","modified":1489487890398},{"_id":"themes/meilidu/source/css/variables.styl","hash":"fe0665a267806163ce9885091c06911e800785e3","modified":1489487890415},{"_id":"themes/meilidu/source/css/style.styl","hash":"63e1b6b2d61f60b8c959a1300b0842d5221ba4a5","modified":1489487890406},{"_id":"themes/meilidu/source/img/header.jpg","hash":"9e297f210b41c9035f812b427ec0077fa4ed5a26","modified":1489487890428},{"_id":"themes/meilidu/source/css/fonts/Inconsolata/Inconsolata-Bold.ttf","hash":"8639e856aa9ea16e0d519206f76942ce87d23017","modified":1489487890264},{"_id":"themes/meilidu/source/css/fonts/Noto_Serif/LICENSE.txt","hash":"47b573e3824cd5e02a1a3ae99e2735b49e0256e4","modified":1489487890332},{"_id":"themes/meilidu/source/css/fonts/Noto_Sans/LICENSE.txt","hash":"47b573e3824cd5e02a1a3ae99e2735b49e0256e4","modified":1489487890278},{"_id":"themes/meilidu/source/css/fonts/Inconsolata/Inconsolata-Regular.ttf","hash":"493154cb3884f5dcdfcac5515ea0db1f7281538f","modified":1489487890271},{"_id":"themes/meilidu/source/css/fonts/Noto_Serif/NotoSerif-BoldItalic.ttf","hash":"a7396a51dfa5566d9e9c6d37f47bf0ef70d69805","modified":1489487890356},{"_id":"themes/meilidu/source/css/fonts/Noto_Serif/NotoSerif-Bold.ttf","hash":"ee116aee0acfe164d400e25a1e29048b90e8e751","modified":1489487890345},{"_id":"themes/meilidu/source/css/fonts/Noto_Serif/NotoSerif-Regular.ttf","hash":"53e621c09b13232176bbed30dfe37b1d47170ff6","modified":1489487890380},{"_id":"themes/meilidu/source/css/fonts/Noto_Serif/NotoSerif-Italic.ttf","hash":"8d1c28d0c6ad6f06575b5b4c3b9026fcfd74afbb","modified":1489487890367},{"_id":"themes/meilidu/source/css/fonts/Noto_Sans/NotoSans-Bold.ttf","hash":"563bd982ccf5b05c6234c40a5758dda2f19160fb","modified":1489487890291},{"_id":"themes/meilidu/source/css/fonts/Noto_Sans/NotoSans-BoldItalic.ttf","hash":"a1fbfdfb3fb027e50061e795e1262bfc15c920e2","modified":1489487890301},{"_id":"themes/meilidu/gitHubAssets/showcase.png","hash":"34ddd37e23b14ec6fed3652583141240920a6d74","modified":1489487890158},{"_id":"themes/meilidu/source/css/fonts/Noto_Sans/NotoSans-Italic.ttf","hash":"0ce726939b7e3237c6eddd998f249e9b969906d7","modified":1489487890311},{"_id":"themes/meilidu/source/css/fonts/Noto_Sans/NotoSans-Regular.ttf","hash":"830953c678e6a50697108a9c87d229cef130975a","modified":1489487890323},{"_id":"public/2017/03/14/Learning-to-Learn/index.html","hash":"b6fd6832e29f6487b922f8744277758982d7727a","modified":1489503407882},{"_id":"public/2017/03/14/Document-Your-Journey/index.html","hash":"5c762da8fba433edbf1bcf9fa8a8a9a764c1c774","modified":1489503330630},{"_id":"public/2017/03/14/Start-the-Beginning/index.html","hash":"a0d1fa2b698eb7e64d7e5fd8c3a55cd3a3b7f7ee","modified":1489503330632},{"_id":"public/about/index.html","hash":"29ce50302ff6128535bd614fadd1569c1f428ad7","modified":1489503330644},{"_id":"public/archives/index.html","hash":"f3da17849ce12e438cfd535037a737a10ef0585b","modified":1489503330644},{"_id":"public/2017/03/13/Elegant-Code/index.html","hash":"29f225197cdb498bd03a0cec7e8a03166088d27c","modified":1489503330644},{"_id":"public/archives/2017/index.html","hash":"f3da17849ce12e438cfd535037a737a10ef0585b","modified":1489503330644},{"_id":"public/archives/2017/03/index.html","hash":"f3da17849ce12e438cfd535037a737a10ef0585b","modified":1489503330644},{"_id":"public/index.html","hash":"77f2985b65e9457e1a833e8c67156330d86509ba","modified":1489503407882},{"_id":"public/css/fonts/Noto_Serif/LICENSE.txt","hash":"47b573e3824cd5e02a1a3ae99e2735b49e0256e4","modified":1489503330658},{"_id":"public/css/fonts/Inconsolata/Inconsolata-Bold.ttf","hash":"8639e856aa9ea16e0d519206f76942ce87d23017","modified":1489503330659},{"_id":"public/css/fonts/Noto_Sans/LICENSE.txt","hash":"47b573e3824cd5e02a1a3ae99e2735b49e0256e4","modified":1489503330659},{"_id":"public/css/fonts/Inconsolata/Inconsolata-Regular.ttf","hash":"493154cb3884f5dcdfcac5515ea0db1f7281538f","modified":1489503339301},{"_id":"public/css/article.css","hash":"469969d225bf52b73ea9015dc77019ad6c171338","modified":1489503339308},{"_id":"public/css/headers.css","hash":"16ed163ae6d08c7102139cb007f3f7340e4f7ae0","modified":1489503339308},{"_id":"public/css/archive.css","hash":"379d860ed5bbae46dba8611fb7772c081c3a2f2e","modified":1489503339308},{"_id":"public/css/footer.css","hash":"5302ac934ef7d19ec1049e8d4a3a58586e7ffcb6","modified":1489503339308},{"_id":"public/css/scrollbar.css","hash":"ae9b032608e18dfcdd658ac1f21b67f15d2a365f","modified":1489503339308},{"_id":"public/css/highlight.css","hash":"73a8202b2d988afb05780c0fb68de47af781b0c4","modified":1489503339308},{"_id":"public/css/header.css","hash":"9994d7ee8477f5287d0ae54b43c2364dd1c4c680","modified":1489503339308},{"_id":"public/css/underline.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489503339308},{"_id":"public/css/variables.css","hash":"77cb4e7b62bc125a9fc527f1ccde0e777ceab5e4","modified":1489503339308},{"_id":"public/css/style.css","hash":"b39fcb385fddd0c081bef418ce570f2e43ed6dc0","modified":1489503339309},{"_id":"public/css/fonts/Noto_Serif/NotoSerif-Italic.ttf","hash":"8d1c28d0c6ad6f06575b5b4c3b9026fcfd74afbb","modified":1489503339356},{"_id":"public/css/fonts/Noto_Sans/NotoSans-Italic.ttf","hash":"0ce726939b7e3237c6eddd998f249e9b969906d7","modified":1489503339356},{"_id":"public/css/fonts/Noto_Sans/NotoSans-BoldItalic.ttf","hash":"a1fbfdfb3fb027e50061e795e1262bfc15c920e2","modified":1489503339357},{"_id":"public/img/header.jpg","hash":"9e297f210b41c9035f812b427ec0077fa4ed5a26","modified":1489503339367},{"_id":"public/css/fonts/Noto_Serif/NotoSerif-Bold.ttf","hash":"ee116aee0acfe164d400e25a1e29048b90e8e751","modified":1489503339367},{"_id":"public/css/fonts/Noto_Serif/NotoSerif-BoldItalic.ttf","hash":"a7396a51dfa5566d9e9c6d37f47bf0ef70d69805","modified":1489503339367},{"_id":"public/css/fonts/Noto_Serif/NotoSerif-Regular.ttf","hash":"53e621c09b13232176bbed30dfe37b1d47170ff6","modified":1489503339368},{"_id":"public/css/fonts/Noto_Sans/NotoSans-Regular.ttf","hash":"830953c678e6a50697108a9c87d229cef130975a","modified":1489503339392},{"_id":"public/css/fonts/Noto_Sans/NotoSans-Bold.ttf","hash":"563bd982ccf5b05c6234c40a5758dda2f19160fb","modified":1489503339392}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2017-03-14T10:55:03.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-03-14 06:55:03\n---\n","updated":"2017-03-14T10:55:03.965Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj09ntnsq00045kacr3wifpcc","content":"","excerpt":"","more":""}],"Post":[{"title":"Elegant Code","date":"2017-03-14T00:25:05.000Z","_content":"\n#### Attempting to raise coding skills from high-intermediate to high\n\nWhen I migrated my Introduction to Programming classes from Perl to Node.js, I had a slightly moderate learning curve.  \nI also moved my AP CompSci classes away from Java to Modern Web Development. I had dabbled in web development back in the 90's and stopped about the time frames were a thing. But now..... HOLY COW! Modern web dev is HUGE. A few things were immediately apparent about the current state of affairs:  \n* Functional programming is difficult to grok, so people keep making frameworks & such to abstract away the hard, tedious job of coding.\n* Half the people lament the fact that there are so many frameworks and the other half say 'you must not write enterprise-class software\nor you'd understand the need for all of this flux!'\n* Heck, there are even small divisions on whether JavaScript should still be used by the browsers as the defacto language!  \n  \nI don't have an opinion on the hot-mess state of affairs, but I did need to distill out what I felt was important to learn.  \nThis is the list I came up with:  \n\n* IDE - IntelliJ Ultimate & Notepad++ with plugins\n* Git/Github\n* HTML5 with all the meta tag goodness for responsiveness\n* Markdown\n* CSS3 (media queries, fluid text & images, responsiveness) mobile 1st...\n* SCSS\n* CSS FrameWork (Foundation, Pure, Bootstrap, & Skeleton are great examples)\n* ES6 JavaScript (ESPECIALLY event listening/handling)\n* Regular expressions\n* Node.js (this is just JavaScript but modules, NPM, & libraries are essential knowledge)  \n\nEverything on the above list is what **_I_** would consider foundational, imperative knowledge. But wait, there's more. Everything on the next list is important too, but it starts to become more difficult and opinionated:  \n* A solid understanding of http requests, responses, request types, mime types, and valid response codes\n* A solid understanding of functional programming (first class functions, pure functions, IIFEs, closures, function expressions vs. function declarations)\n* A solid understanding of Ajax & JSON with stringify & parse\n* Writing a pure Node.js web server with no frameworks, including routing & mime type handling\n* A templating engine. I chose EJS for it's simplicity\n* File I/O with Ajax, CSV, & databses (I chose NeDB for Mongo-like syntax at a millionith of the overhead)\n* Progressive web app methodology (https, manifest.json, service worker, & favicons)\n* [Firebase](http://firebase.google.com)\n* [Heroku](http://www.heroku.com)\n\nAs I began my learning journey, I had many obstacles. The main one was my OCD personality. When I code, I prefer to do it using industry best-practice standards. Learning modern web development using the web is not very conducive to this because of all the bad or outdated material out there. Just filtering the web content is a major chore and it was one that I tried my best to sheild my students from by curating the best of the best and linking what I found on our LMS (learning management system).\n\nIf I were to rank skill with a particular subject, I would probably do it like this:  \n\n* **_Unskilled_**\n* Low\n* Intermediate-low\n* Upper-low\n* Lower-intermediate\n* Intermediate\n* Upper-intermediate\n* Lower-high\n* Intermediate-high\n* High\n* **_Expert_**\n\nI feel that after two years of working my way through the learning process, I am at the high-intermediate plateau. I can read & understand most standard code. I can extemporaneously write a progressive web app & have it hosted on Heroku. I can easily help my students with their coding projects. Where I feel like I'm lacking: Understanding how to implement Oauth2, refined design patterns to optimize my applications, ES6 symbols & promises, and finally, a good eye for UX design.  \n\nAs I tackle the things I need to work on, I will go back and write these web logs to present the material I've curated for my students in an effort to help the next people that need to dive in from the top.","source":"_posts/Elegant-Code.md","raw":"---\ntitle: Elegant Code\ndate: 2017-03-13 20:25:05\ntags:\n---\n\n#### Attempting to raise coding skills from high-intermediate to high\n\nWhen I migrated my Introduction to Programming classes from Perl to Node.js, I had a slightly moderate learning curve.  \nI also moved my AP CompSci classes away from Java to Modern Web Development. I had dabbled in web development back in the 90's and stopped about the time frames were a thing. But now..... HOLY COW! Modern web dev is HUGE. A few things were immediately apparent about the current state of affairs:  \n* Functional programming is difficult to grok, so people keep making frameworks & such to abstract away the hard, tedious job of coding.\n* Half the people lament the fact that there are so many frameworks and the other half say 'you must not write enterprise-class software\nor you'd understand the need for all of this flux!'\n* Heck, there are even small divisions on whether JavaScript should still be used by the browsers as the defacto language!  \n  \nI don't have an opinion on the hot-mess state of affairs, but I did need to distill out what I felt was important to learn.  \nThis is the list I came up with:  \n\n* IDE - IntelliJ Ultimate & Notepad++ with plugins\n* Git/Github\n* HTML5 with all the meta tag goodness for responsiveness\n* Markdown\n* CSS3 (media queries, fluid text & images, responsiveness) mobile 1st...\n* SCSS\n* CSS FrameWork (Foundation, Pure, Bootstrap, & Skeleton are great examples)\n* ES6 JavaScript (ESPECIALLY event listening/handling)\n* Regular expressions\n* Node.js (this is just JavaScript but modules, NPM, & libraries are essential knowledge)  \n\nEverything on the above list is what **_I_** would consider foundational, imperative knowledge. But wait, there's more. Everything on the next list is important too, but it starts to become more difficult and opinionated:  \n* A solid understanding of http requests, responses, request types, mime types, and valid response codes\n* A solid understanding of functional programming (first class functions, pure functions, IIFEs, closures, function expressions vs. function declarations)\n* A solid understanding of Ajax & JSON with stringify & parse\n* Writing a pure Node.js web server with no frameworks, including routing & mime type handling\n* A templating engine. I chose EJS for it's simplicity\n* File I/O with Ajax, CSV, & databses (I chose NeDB for Mongo-like syntax at a millionith of the overhead)\n* Progressive web app methodology (https, manifest.json, service worker, & favicons)\n* [Firebase](http://firebase.google.com)\n* [Heroku](http://www.heroku.com)\n\nAs I began my learning journey, I had many obstacles. The main one was my OCD personality. When I code, I prefer to do it using industry best-practice standards. Learning modern web development using the web is not very conducive to this because of all the bad or outdated material out there. Just filtering the web content is a major chore and it was one that I tried my best to sheild my students from by curating the best of the best and linking what I found on our LMS (learning management system).\n\nIf I were to rank skill with a particular subject, I would probably do it like this:  \n\n* **_Unskilled_**\n* Low\n* Intermediate-low\n* Upper-low\n* Lower-intermediate\n* Intermediate\n* Upper-intermediate\n* Lower-high\n* Intermediate-high\n* High\n* **_Expert_**\n\nI feel that after two years of working my way through the learning process, I am at the high-intermediate plateau. I can read & understand most standard code. I can extemporaneously write a progressive web app & have it hosted on Heroku. I can easily help my students with their coding projects. Where I feel like I'm lacking: Understanding how to implement Oauth2, refined design patterns to optimize my applications, ES6 symbols & promises, and finally, a good eye for UX design.  \n\nAs I tackle the things I need to work on, I will go back and write these web logs to present the material I've curated for my students in an effort to help the next people that need to dive in from the top.","slug":"Elegant-Code","published":1,"updated":"2017-03-14T14:54:53.363Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj09ntnrj00005kactxlx01hs","content":"<h4 id=\"Attempting-to-raise-coding-skills-from-high-intermediate-to-high\"><a href=\"#Attempting-to-raise-coding-skills-from-high-intermediate-to-high\" class=\"headerlink\" title=\"Attempting to raise coding skills from high-intermediate to high\"></a>Attempting to raise coding skills from high-intermediate to high</h4><p>When I migrated my Introduction to Programming classes from Perl to Node.js, I had a slightly moderate learning curve.<br>I also moved my AP CompSci classes away from Java to Modern Web Development. I had dabbled in web development back in the 90’s and stopped about the time frames were a thing. But now….. HOLY COW! Modern web dev is HUGE. A few things were immediately apparent about the current state of affairs:  </p>\n<ul>\n<li>Functional programming is difficult to grok, so people keep making frameworks &amp; such to abstract away the hard, tedious job of coding.</li>\n<li>Half the people lament the fact that there are so many frameworks and the other half say ‘you must not write enterprise-class software<br>or you’d understand the need for all of this flux!’</li>\n<li>Heck, there are even small divisions on whether JavaScript should still be used by the browsers as the defacto language!  </li>\n</ul>\n<p>I don’t have an opinion on the hot-mess state of affairs, but I did need to distill out what I felt was important to learn.<br>This is the list I came up with:  </p>\n<ul>\n<li>IDE - IntelliJ Ultimate &amp; Notepad++ with plugins</li>\n<li>Git/Github</li>\n<li>HTML5 with all the meta tag goodness for responsiveness</li>\n<li>Markdown</li>\n<li>CSS3 (media queries, fluid text &amp; images, responsiveness) mobile 1st…</li>\n<li>SCSS</li>\n<li>CSS FrameWork (Foundation, Pure, Bootstrap, &amp; Skeleton are great examples)</li>\n<li>ES6 JavaScript (ESPECIALLY event listening/handling)</li>\n<li>Regular expressions</li>\n<li>Node.js (this is just JavaScript but modules, NPM, &amp; libraries are essential knowledge)  </li>\n</ul>\n<p>Everything on the above list is what <strong><em>I</em></strong> would consider foundational, imperative knowledge. But wait, there’s more. Everything on the next list is important too, but it starts to become more difficult and opinionated:  </p>\n<ul>\n<li>A solid understanding of http requests, responses, request types, mime types, and valid response codes</li>\n<li>A solid understanding of functional programming (first class functions, pure functions, IIFEs, closures, function expressions vs. function declarations)</li>\n<li>A solid understanding of Ajax &amp; JSON with stringify &amp; parse</li>\n<li>Writing a pure Node.js web server with no frameworks, including routing &amp; mime type handling</li>\n<li>A templating engine. I chose EJS for it’s simplicity</li>\n<li>File I/O with Ajax, CSV, &amp; databses (I chose NeDB for Mongo-like syntax at a millionith of the overhead)</li>\n<li>Progressive web app methodology (https, manifest.json, service worker, &amp; favicons)</li>\n<li><a href=\"http://firebase.google.com\" target=\"_blank\" rel=\"external\">Firebase</a></li>\n<li><a href=\"http://www.heroku.com\" target=\"_blank\" rel=\"external\">Heroku</a></li>\n</ul>\n<p>As I began my learning journey, I had many obstacles. The main one was my OCD personality. When I code, I prefer to do it using industry best-practice standards. Learning modern web development using the web is not very conducive to this because of all the bad or outdated material out there. Just filtering the web content is a major chore and it was one that I tried my best to sheild my students from by curating the best of the best and linking what I found on our LMS (learning management system).</p>\n<p>If I were to rank skill with a particular subject, I would probably do it like this:  </p>\n<ul>\n<li><strong><em>Unskilled</em></strong></li>\n<li>Low</li>\n<li>Intermediate-low</li>\n<li>Upper-low</li>\n<li>Lower-intermediate</li>\n<li>Intermediate</li>\n<li>Upper-intermediate</li>\n<li>Lower-high</li>\n<li>Intermediate-high</li>\n<li>High</li>\n<li><strong><em>Expert</em></strong></li>\n</ul>\n<p>I feel that after two years of working my way through the learning process, I am at the high-intermediate plateau. I can read &amp; understand most standard code. I can extemporaneously write a progressive web app &amp; have it hosted on Heroku. I can easily help my students with their coding projects. Where I feel like I’m lacking: Understanding how to implement Oauth2, refined design patterns to optimize my applications, ES6 symbols &amp; promises, and finally, a good eye for UX design.  </p>\n<p>As I tackle the things I need to work on, I will go back and write these web logs to present the material I’ve curated for my students in an effort to help the next people that need to dive in from the top.</p>\n","excerpt":"","more":"<h4 id=\"Attempting-to-raise-coding-skills-from-high-intermediate-to-high\"><a href=\"#Attempting-to-raise-coding-skills-from-high-intermediate-to-high\" class=\"headerlink\" title=\"Attempting to raise coding skills from high-intermediate to high\"></a>Attempting to raise coding skills from high-intermediate to high</h4><p>When I migrated my Introduction to Programming classes from Perl to Node.js, I had a slightly moderate learning curve.<br>I also moved my AP CompSci classes away from Java to Modern Web Development. I had dabbled in web development back in the 90’s and stopped about the time frames were a thing. But now….. HOLY COW! Modern web dev is HUGE. A few things were immediately apparent about the current state of affairs:  </p>\n<ul>\n<li>Functional programming is difficult to grok, so people keep making frameworks &amp; such to abstract away the hard, tedious job of coding.</li>\n<li>Half the people lament the fact that there are so many frameworks and the other half say ‘you must not write enterprise-class software<br>or you’d understand the need for all of this flux!’</li>\n<li>Heck, there are even small divisions on whether JavaScript should still be used by the browsers as the defacto language!  </li>\n</ul>\n<p>I don’t have an opinion on the hot-mess state of affairs, but I did need to distill out what I felt was important to learn.<br>This is the list I came up with:  </p>\n<ul>\n<li>IDE - IntelliJ Ultimate &amp; Notepad++ with plugins</li>\n<li>Git/Github</li>\n<li>HTML5 with all the meta tag goodness for responsiveness</li>\n<li>Markdown</li>\n<li>CSS3 (media queries, fluid text &amp; images, responsiveness) mobile 1st…</li>\n<li>SCSS</li>\n<li>CSS FrameWork (Foundation, Pure, Bootstrap, &amp; Skeleton are great examples)</li>\n<li>ES6 JavaScript (ESPECIALLY event listening/handling)</li>\n<li>Regular expressions</li>\n<li>Node.js (this is just JavaScript but modules, NPM, &amp; libraries are essential knowledge)  </li>\n</ul>\n<p>Everything on the above list is what <strong><em>I</em></strong> would consider foundational, imperative knowledge. But wait, there’s more. Everything on the next list is important too, but it starts to become more difficult and opinionated:  </p>\n<ul>\n<li>A solid understanding of http requests, responses, request types, mime types, and valid response codes</li>\n<li>A solid understanding of functional programming (first class functions, pure functions, IIFEs, closures, function expressions vs. function declarations)</li>\n<li>A solid understanding of Ajax &amp; JSON with stringify &amp; parse</li>\n<li>Writing a pure Node.js web server with no frameworks, including routing &amp; mime type handling</li>\n<li>A templating engine. I chose EJS for it’s simplicity</li>\n<li>File I/O with Ajax, CSV, &amp; databses (I chose NeDB for Mongo-like syntax at a millionith of the overhead)</li>\n<li>Progressive web app methodology (https, manifest.json, service worker, &amp; favicons)</li>\n<li><a href=\"http://firebase.google.com\">Firebase</a></li>\n<li><a href=\"http://www.heroku.com\">Heroku</a></li>\n</ul>\n<p>As I began my learning journey, I had many obstacles. The main one was my OCD personality. When I code, I prefer to do it using industry best-practice standards. Learning modern web development using the web is not very conducive to this because of all the bad or outdated material out there. Just filtering the web content is a major chore and it was one that I tried my best to sheild my students from by curating the best of the best and linking what I found on our LMS (learning management system).</p>\n<p>If I were to rank skill with a particular subject, I would probably do it like this:  </p>\n<ul>\n<li><strong><em>Unskilled</em></strong></li>\n<li>Low</li>\n<li>Intermediate-low</li>\n<li>Upper-low</li>\n<li>Lower-intermediate</li>\n<li>Intermediate</li>\n<li>Upper-intermediate</li>\n<li>Lower-high</li>\n<li>Intermediate-high</li>\n<li>High</li>\n<li><strong><em>Expert</em></strong></li>\n</ul>\n<p>I feel that after two years of working my way through the learning process, I am at the high-intermediate plateau. I can read &amp; understand most standard code. I can extemporaneously write a progressive web app &amp; have it hosted on Heroku. I can easily help my students with their coding projects. Where I feel like I’m lacking: Understanding how to implement Oauth2, refined design patterns to optimize my applications, ES6 symbols &amp; promises, and finally, a good eye for UX design.  </p>\n<p>As I tackle the things I need to work on, I will go back and write these web logs to present the material I’ve curated for my students in an effort to help the next people that need to dive in from the top.</p>\n"},{"title":"Document Your Journey","date":"2017-03-14T13:22:10.000Z","_content":"\nAs you navigate your learning it is recommended that you write a web log (blog) record of it all. Why? How about these two guy's reasoning:\n\n* [Dan Luu from Microsoft](https://twitter.com/danluu/status/806223533181468672), [About](https://www.linkedin.com/in/danluu/)\n* [Steve Yegge from Google](https://sites.google.com/site/steveyegge2/you-should-write-blogs), [About](https://en.wikipedia.org/wiki/Steve_Yegge)\n\nThere is real value in writing your thoughts down and articulating your learnings.\n\nYou have a huge array of blogging methods & platforms available to you such as WordPress & Moodle. My recommendation is the following combo:\n\n* [GitHub Pages](https://pages.github.com/) - You already have access to this resource because you have a GitHub account!\n* [Markdown](https://en.wikipedia.org/wiki/Markdown) - A dead-simple set of extra characters that you add to plain text. The final product is easily converted to web pages (html). [Learn](http://www.markdowntutorial.com/), [Reference](https://guides.github.com/pdfs/markdown-cheatsheet-online.pdf).\n* [Hexo](https://hexo.io) - This one was bit of a challenge for me. I had all kinds of trouble setting it up with a vanilla Windows 10 computer. [HERE](https://malekbenz.com/blog/2016/09/10/Create-Host-Blog-for-free-with-Hexo-Github) is a good tutorial but with some caveats (see below). Hexo works because you have already installed Node.js on your computer.\n\n#### Hexo Caveats\n\nI had to update my _config.yml file with the following:\n* I downloaded a new theme from Hexo's [theme site](https://hexo.io/themes/), put it in the themes directory and set the **theme:** to its name.\n* I changed the public path to:  ```./``` so that my blog would be available from the root url.\n* I had trouble getting the server to run, so I ran the ```hexo generate``` command first then the ```hexo server -s``` command.\n\nThis should get you up & running! These tasks should be fairly complex if you are new to all of this, but it is a good introduction to workflow for this vocation. Writing Markdown is good place to begin before you start writing code. Please email me your blog address:  **_bates4e@gmail.com_** so I can read it!","source":"_posts/Document-Your-Journey.md","raw":"---\ntitle: Document Your Journey\ndate: 2017-03-14 09:22:10\ntags:\n---\n\nAs you navigate your learning it is recommended that you write a web log (blog) record of it all. Why? How about these two guy's reasoning:\n\n* [Dan Luu from Microsoft](https://twitter.com/danluu/status/806223533181468672), [About](https://www.linkedin.com/in/danluu/)\n* [Steve Yegge from Google](https://sites.google.com/site/steveyegge2/you-should-write-blogs), [About](https://en.wikipedia.org/wiki/Steve_Yegge)\n\nThere is real value in writing your thoughts down and articulating your learnings.\n\nYou have a huge array of blogging methods & platforms available to you such as WordPress & Moodle. My recommendation is the following combo:\n\n* [GitHub Pages](https://pages.github.com/) - You already have access to this resource because you have a GitHub account!\n* [Markdown](https://en.wikipedia.org/wiki/Markdown) - A dead-simple set of extra characters that you add to plain text. The final product is easily converted to web pages (html). [Learn](http://www.markdowntutorial.com/), [Reference](https://guides.github.com/pdfs/markdown-cheatsheet-online.pdf).\n* [Hexo](https://hexo.io) - This one was bit of a challenge for me. I had all kinds of trouble setting it up with a vanilla Windows 10 computer. [HERE](https://malekbenz.com/blog/2016/09/10/Create-Host-Blog-for-free-with-Hexo-Github) is a good tutorial but with some caveats (see below). Hexo works because you have already installed Node.js on your computer.\n\n#### Hexo Caveats\n\nI had to update my _config.yml file with the following:\n* I downloaded a new theme from Hexo's [theme site](https://hexo.io/themes/), put it in the themes directory and set the **theme:** to its name.\n* I changed the public path to:  ```./``` so that my blog would be available from the root url.\n* I had trouble getting the server to run, so I ran the ```hexo generate``` command first then the ```hexo server -s``` command.\n\nThis should get you up & running! These tasks should be fairly complex if you are new to all of this, but it is a good introduction to workflow for this vocation. Writing Markdown is good place to begin before you start writing code. Please email me your blog address:  **_bates4e@gmail.com_** so I can read it!","slug":"Document-Your-Journey","published":1,"updated":"2017-03-14T14:54:32.347Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj09ntnru00015kack1vva7lh","content":"<p>As you navigate your learning it is recommended that you write a web log (blog) record of it all. Why? How about these two guy’s reasoning:</p>\n<ul>\n<li><a href=\"https://twitter.com/danluu/status/806223533181468672\" target=\"_blank\" rel=\"external\">Dan Luu from Microsoft</a>, <a href=\"https://www.linkedin.com/in/danluu/\" target=\"_blank\" rel=\"external\">About</a></li>\n<li><a href=\"https://sites.google.com/site/steveyegge2/you-should-write-blogs\" target=\"_blank\" rel=\"external\">Steve Yegge from Google</a>, <a href=\"https://en.wikipedia.org/wiki/Steve_Yegge\" target=\"_blank\" rel=\"external\">About</a></li>\n</ul>\n<p>There is real value in writing your thoughts down and articulating your learnings.</p>\n<p>You have a huge array of blogging methods &amp; platforms available to you such as WordPress &amp; Moodle. My recommendation is the following combo:</p>\n<ul>\n<li><a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"external\">GitHub Pages</a> - You already have access to this resource because you have a GitHub account!</li>\n<li><a href=\"https://en.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"external\">Markdown</a> - A dead-simple set of extra characters that you add to plain text. The final product is easily converted to web pages (html). <a href=\"http://www.markdowntutorial.com/\" target=\"_blank\" rel=\"external\">Learn</a>, <a href=\"https://guides.github.com/pdfs/markdown-cheatsheet-online.pdf\" target=\"_blank\" rel=\"external\">Reference</a>.</li>\n<li><a href=\"https://hexo.io\" target=\"_blank\" rel=\"external\">Hexo</a> - This one was bit of a challenge for me. I had all kinds of trouble setting it up with a vanilla Windows 10 computer. <a href=\"https://malekbenz.com/blog/2016/09/10/Create-Host-Blog-for-free-with-Hexo-Github\" target=\"_blank\" rel=\"external\">HERE</a> is a good tutorial but with some caveats (see below). Hexo works because you have already installed Node.js on your computer.</li>\n</ul>\n<h4 id=\"Hexo-Caveats\"><a href=\"#Hexo-Caveats\" class=\"headerlink\" title=\"Hexo Caveats\"></a>Hexo Caveats</h4><p>I had to update my _config.yml file with the following:</p>\n<ul>\n<li>I downloaded a new theme from Hexo’s <a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"external\">theme site</a>, put it in the themes directory and set the <strong>theme:</strong> to its name.</li>\n<li>I changed the public path to:  <code>./</code> so that my blog would be available from the root url.</li>\n<li>I had trouble getting the server to run, so I ran the <code>hexo generate</code> command first then the <code>hexo server -s</code> command.</li>\n</ul>\n<p>This should get you up &amp; running! These tasks should be fairly complex if you are new to all of this, but it is a good introduction to workflow for this vocation. Writing Markdown is good place to begin before you start writing code. Please email me your blog address:  <strong><em>bates4e@gmail.com</em></strong> so I can read it!</p>\n","excerpt":"","more":"<p>As you navigate your learning it is recommended that you write a web log (blog) record of it all. Why? How about these two guy’s reasoning:</p>\n<ul>\n<li><a href=\"https://twitter.com/danluu/status/806223533181468672\">Dan Luu from Microsoft</a>, <a href=\"https://www.linkedin.com/in/danluu/\">About</a></li>\n<li><a href=\"https://sites.google.com/site/steveyegge2/you-should-write-blogs\">Steve Yegge from Google</a>, <a href=\"https://en.wikipedia.org/wiki/Steve_Yegge\">About</a></li>\n</ul>\n<p>There is real value in writing your thoughts down and articulating your learnings.</p>\n<p>You have a huge array of blogging methods &amp; platforms available to you such as WordPress &amp; Moodle. My recommendation is the following combo:</p>\n<ul>\n<li><a href=\"https://pages.github.com/\">GitHub Pages</a> - You already have access to this resource because you have a GitHub account!</li>\n<li><a href=\"https://en.wikipedia.org/wiki/Markdown\">Markdown</a> - A dead-simple set of extra characters that you add to plain text. The final product is easily converted to web pages (html). <a href=\"http://www.markdowntutorial.com/\">Learn</a>, <a href=\"https://guides.github.com/pdfs/markdown-cheatsheet-online.pdf\">Reference</a>.</li>\n<li><a href=\"https://hexo.io\">Hexo</a> - This one was bit of a challenge for me. I had all kinds of trouble setting it up with a vanilla Windows 10 computer. <a href=\"https://malekbenz.com/blog/2016/09/10/Create-Host-Blog-for-free-with-Hexo-Github\">HERE</a> is a good tutorial but with some caveats (see below). Hexo works because you have already installed Node.js on your computer.</li>\n</ul>\n<h4 id=\"Hexo-Caveats\"><a href=\"#Hexo-Caveats\" class=\"headerlink\" title=\"Hexo Caveats\"></a>Hexo Caveats</h4><p>I had to update my _config.yml file with the following:</p>\n<ul>\n<li>I downloaded a new theme from Hexo’s <a href=\"https://hexo.io/themes/\">theme site</a>, put it in the themes directory and set the <strong>theme:</strong> to its name.</li>\n<li>I changed the public path to:  <code>./</code> so that my blog would be available from the root url.</li>\n<li>I had trouble getting the server to run, so I ran the <code>hexo generate</code> command first then the <code>hexo server -s</code> command.</li>\n</ul>\n<p>This should get you up &amp; running! These tasks should be fairly complex if you are new to all of this, but it is a good introduction to workflow for this vocation. Writing Markdown is good place to begin before you start writing code. Please email me your blog address:  <strong><em>bates4e@gmail.com</em></strong> so I can read it!</p>\n"},{"title":"Start @ the Beginning","date":"2017-03-14T10:58:34.000Z","_content":"\nI lament the fact that the college I teach programming at does not offer a _'tooling'_ class. I believe that students who choose programming as a vocation would be better served by learning _how_ to code first before they get into _what_ to code. The programming ecosystem is quite large and somewhat diverse, especially in the realm of editors/IDEs. Below, I will outline what seems to work best for me & my students and I will provide pertinent, curated learning materials that will hopefully help you get started and be productive. If you have had better luck along the way with different tools, please feel free to share! Please also be aware that I code in Windows 10, so you will have to modify your downloads for your OS. Please, please don't just glance at the educational material provided below. Really take the time to learn each tool. I am speaking from the school of hard knocks here as I wasn't always diligent and I paid the price in frustration later as I would go back and find the answer in the material. \n\n### Tools\n\n* IDE: [IntelliJ IDEa Ultimate](http://www.jetbrains.com/idea/download) - There are a LOT of editors/IDEs out there (Sublime, Atom, etc.) and the Ultimate edition of IntelliJ is not cheap, but I feel like it is a work of art. With wonderful plugins, support for a lot of bleeding-edge web tech, and a large support pool on the interwebs it is my go-to IDE for all of my programming. Heck, they now even support Perl with a plugin! Learn [HERE](http://blog.jetbrains.com/idea/2015/06/new-courseware-for-intellij-idea/).\n* Editor: [Notepad++](http://notepad-plus-plus.org/download/v7.3.3.html) - When I need to quick-open/edit a file, this is the tool I turn to. It has plenty of themes & plugins to make you happy and they are now [CIA proof](http://notepad-plus-plus.org/news/notepad-7.3.3-fix-cia-hacking-issue.html).\n* [Git for Windows](git-scm.com/download/win) - This tool is needed to keep track of the changes you make to your programming files. Learn [HERE](http://www.udacity.com/course/how-to-use-git-and-github--ud775).\n*[GitHub Desktop](http://desktop.github.com) - Additional utility you can use to publish the repositories you create with Git to the web.\n*[Node.js](http://nodejs.org) - This is the engine that web browsers use to compile the JavaScript code that you write for webpages. They ripped it out, souped it up, and provied it for computers to utilize _outside the browser!_\n* [Google Chrome](https://www.google.com/intl/en/chrome/browser/desktop/index.html?standalone=1) - Indespensible web browser because of it's support of language features but _**ESPECIALLY**_ because of its [developer tools](https://developers.google.com/web/tools/chrome-devtools/)!\n* IntelliJ plugins - At a minimum I recommend these: .ignore, CSS support, EJS, ESLint, Floobits, Git, Github, JavaScript, & NodeJS. I also like the Material Theme.\n* Global NPM modules - Use NPM to install these globally: npm install -g PM2, ESLint\n* Chrome Application: [Web server for Chrome](http://chrome.google.com/webstore/detail/web-server-for-chrome/ofhbbkphhbklhfoeikjpcbhemlocgigb) - Really handy for viewing your static web files locally.\n* SCSS transpiler [Koala](http://koala-app.com/) - VERY easy SCSS to CSS transpiler (converts SCSS to CSS). I will cover this in a later post.\n\n### Sites\n\n* The PREMIER static learning resource on the whole of the internet (IMHO) is the [Mozilla Developer Network (MDN)](https://developer.mozilla.org/en-US/docs/Web). This should be your default reference.\n* [StackOverflow](http://stackoverflow.com) - THE sitefor getting questions answered, but beware: Be sure you've exhausted all of your other resources 1st before asking a question here lest you find yourself kicked into a donkey rape-pit of disdain from the elite users of the site.\n* [HashNode](https://hashnode.com/) - A more gentle, but less effective question answering site.\n* Reddit - [r/webdev](https://www.reddit.com/r/webdev/), [r/javascript](https://www.reddit.com/r/javascript/), [r/learnjavascript](https://www.reddit.com/r/learnjavascript/) are all indispensable resources!\n\n\nThat should be WAY more than enough stuff to explore and install to get you up and running so you can start coding!","source":"_posts/Start-the-Beginning.md","raw":"---\ntitle: Start @ the Beginning\ndate: 2017-03-14 06:58:34\ntags:\n---\n\nI lament the fact that the college I teach programming at does not offer a _'tooling'_ class. I believe that students who choose programming as a vocation would be better served by learning _how_ to code first before they get into _what_ to code. The programming ecosystem is quite large and somewhat diverse, especially in the realm of editors/IDEs. Below, I will outline what seems to work best for me & my students and I will provide pertinent, curated learning materials that will hopefully help you get started and be productive. If you have had better luck along the way with different tools, please feel free to share! Please also be aware that I code in Windows 10, so you will have to modify your downloads for your OS. Please, please don't just glance at the educational material provided below. Really take the time to learn each tool. I am speaking from the school of hard knocks here as I wasn't always diligent and I paid the price in frustration later as I would go back and find the answer in the material. \n\n### Tools\n\n* IDE: [IntelliJ IDEa Ultimate](http://www.jetbrains.com/idea/download) - There are a LOT of editors/IDEs out there (Sublime, Atom, etc.) and the Ultimate edition of IntelliJ is not cheap, but I feel like it is a work of art. With wonderful plugins, support for a lot of bleeding-edge web tech, and a large support pool on the interwebs it is my go-to IDE for all of my programming. Heck, they now even support Perl with a plugin! Learn [HERE](http://blog.jetbrains.com/idea/2015/06/new-courseware-for-intellij-idea/).\n* Editor: [Notepad++](http://notepad-plus-plus.org/download/v7.3.3.html) - When I need to quick-open/edit a file, this is the tool I turn to. It has plenty of themes & plugins to make you happy and they are now [CIA proof](http://notepad-plus-plus.org/news/notepad-7.3.3-fix-cia-hacking-issue.html).\n* [Git for Windows](git-scm.com/download/win) - This tool is needed to keep track of the changes you make to your programming files. Learn [HERE](http://www.udacity.com/course/how-to-use-git-and-github--ud775).\n*[GitHub Desktop](http://desktop.github.com) - Additional utility you can use to publish the repositories you create with Git to the web.\n*[Node.js](http://nodejs.org) - This is the engine that web browsers use to compile the JavaScript code that you write for webpages. They ripped it out, souped it up, and provied it for computers to utilize _outside the browser!_\n* [Google Chrome](https://www.google.com/intl/en/chrome/browser/desktop/index.html?standalone=1) - Indespensible web browser because of it's support of language features but _**ESPECIALLY**_ because of its [developer tools](https://developers.google.com/web/tools/chrome-devtools/)!\n* IntelliJ plugins - At a minimum I recommend these: .ignore, CSS support, EJS, ESLint, Floobits, Git, Github, JavaScript, & NodeJS. I also like the Material Theme.\n* Global NPM modules - Use NPM to install these globally: npm install -g PM2, ESLint\n* Chrome Application: [Web server for Chrome](http://chrome.google.com/webstore/detail/web-server-for-chrome/ofhbbkphhbklhfoeikjpcbhemlocgigb) - Really handy for viewing your static web files locally.\n* SCSS transpiler [Koala](http://koala-app.com/) - VERY easy SCSS to CSS transpiler (converts SCSS to CSS). I will cover this in a later post.\n\n### Sites\n\n* The PREMIER static learning resource on the whole of the internet (IMHO) is the [Mozilla Developer Network (MDN)](https://developer.mozilla.org/en-US/docs/Web). This should be your default reference.\n* [StackOverflow](http://stackoverflow.com) - THE sitefor getting questions answered, but beware: Be sure you've exhausted all of your other resources 1st before asking a question here lest you find yourself kicked into a donkey rape-pit of disdain from the elite users of the site.\n* [HashNode](https://hashnode.com/) - A more gentle, but less effective question answering site.\n* Reddit - [r/webdev](https://www.reddit.com/r/webdev/), [r/javascript](https://www.reddit.com/r/javascript/), [r/learnjavascript](https://www.reddit.com/r/learnjavascript/) are all indispensable resources!\n\n\nThat should be WAY more than enough stuff to explore and install to get you up and running so you can start coding!","slug":"Start-the-Beginning","published":1,"updated":"2017-03-14T14:54:01.780Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj09ntnrx00025kacv6e7nmpn","content":"<p>I lament the fact that the college I teach programming at does not offer a <em>‘tooling’</em> class. I believe that students who choose programming as a vocation would be better served by learning <em>how</em> to code first before they get into <em>what</em> to code. The programming ecosystem is quite large and somewhat diverse, especially in the realm of editors/IDEs. Below, I will outline what seems to work best for me &amp; my students and I will provide pertinent, curated learning materials that will hopefully help you get started and be productive. If you have had better luck along the way with different tools, please feel free to share! Please also be aware that I code in Windows 10, so you will have to modify your downloads for your OS. Please, please don’t just glance at the educational material provided below. Really take the time to learn each tool. I am speaking from the school of hard knocks here as I wasn’t always diligent and I paid the price in frustration later as I would go back and find the answer in the material. </p>\n<h3 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h3><ul>\n<li>IDE: <a href=\"http://www.jetbrains.com/idea/download\" target=\"_blank\" rel=\"external\">IntelliJ IDEa Ultimate</a> - There are a LOT of editors/IDEs out there (Sublime, Atom, etc.) and the Ultimate edition of IntelliJ is not cheap, but I feel like it is a work of art. With wonderful plugins, support for a lot of bleeding-edge web tech, and a large support pool on the interwebs it is my go-to IDE for all of my programming. Heck, they now even support Perl with a plugin! Learn <a href=\"http://blog.jetbrains.com/idea/2015/06/new-courseware-for-intellij-idea/\" target=\"_blank\" rel=\"external\">HERE</a>.</li>\n<li>Editor: <a href=\"http://notepad-plus-plus.org/download/v7.3.3.html\" target=\"_blank\" rel=\"external\">Notepad++</a> - When I need to quick-open/edit a file, this is the tool I turn to. It has plenty of themes &amp; plugins to make you happy and they are now <a href=\"http://notepad-plus-plus.org/news/notepad-7.3.3-fix-cia-hacking-issue.html\" target=\"_blank\" rel=\"external\">CIA proof</a>.</li>\n<li><a href=\"git-scm.com/download/win\">Git for Windows</a> - This tool is needed to keep track of the changes you make to your programming files. Learn <a href=\"http://www.udacity.com/course/how-to-use-git-and-github--ud775\" target=\"_blank\" rel=\"external\">HERE</a>.<br><em><a href=\"http://desktop.github.com\" target=\"_blank\" rel=\"external\">GitHub Desktop</a> - Additional utility you can use to publish the repositories you create with Git to the web.\n</em><a href=\"http://nodejs.org\" target=\"_blank\" rel=\"external\">Node.js</a> - This is the engine that web browsers use to compile the JavaScript code that you write for webpages. They ripped it out, souped it up, and provied it for computers to utilize <em>outside the browser!</em></li>\n<li><a href=\"https://www.google.com/intl/en/chrome/browser/desktop/index.html?standalone=1\" target=\"_blank\" rel=\"external\">Google Chrome</a> - Indespensible web browser because of it’s support of language features but <em><strong>ESPECIALLY</strong></em> because of its <a href=\"https://developers.google.com/web/tools/chrome-devtools/\" target=\"_blank\" rel=\"external\">developer tools</a>!</li>\n<li>IntelliJ plugins - At a minimum I recommend these: .ignore, CSS support, EJS, ESLint, Floobits, Git, Github, JavaScript, &amp; NodeJS. I also like the Material Theme.</li>\n<li>Global NPM modules - Use NPM to install these globally: npm install -g PM2, ESLint</li>\n<li>Chrome Application: <a href=\"http://chrome.google.com/webstore/detail/web-server-for-chrome/ofhbbkphhbklhfoeikjpcbhemlocgigb\" target=\"_blank\" rel=\"external\">Web server for Chrome</a> - Really handy for viewing your static web files locally.</li>\n<li>SCSS transpiler <a href=\"http://koala-app.com/\" target=\"_blank\" rel=\"external\">Koala</a> - VERY easy SCSS to CSS transpiler (converts SCSS to CSS). I will cover this in a later post.</li>\n</ul>\n<h3 id=\"Sites\"><a href=\"#Sites\" class=\"headerlink\" title=\"Sites\"></a>Sites</h3><ul>\n<li>The PREMIER static learning resource on the whole of the internet (IMHO) is the <a href=\"https://developer.mozilla.org/en-US/docs/Web\" target=\"_blank\" rel=\"external\">Mozilla Developer Network (MDN)</a>. This should be your default reference.</li>\n<li><a href=\"http://stackoverflow.com\" target=\"_blank\" rel=\"external\">StackOverflow</a> - THE sitefor getting questions answered, but beware: Be sure you’ve exhausted all of your other resources 1st before asking a question here lest you find yourself kicked into a donkey rape-pit of disdain from the elite users of the site.</li>\n<li><a href=\"https://hashnode.com/\" target=\"_blank\" rel=\"external\">HashNode</a> - A more gentle, but less effective question answering site.</li>\n<li>Reddit - <a href=\"https://www.reddit.com/r/webdev/\" target=\"_blank\" rel=\"external\">r/webdev</a>, <a href=\"https://www.reddit.com/r/javascript/\" target=\"_blank\" rel=\"external\">r/javascript</a>, <a href=\"https://www.reddit.com/r/learnjavascript/\" target=\"_blank\" rel=\"external\">r/learnjavascript</a> are all indispensable resources!</li>\n</ul>\n<p>That should be WAY more than enough stuff to explore and install to get you up and running so you can start coding!</p>\n","excerpt":"","more":"<p>I lament the fact that the college I teach programming at does not offer a <em>‘tooling’</em> class. I believe that students who choose programming as a vocation would be better served by learning <em>how</em> to code first before they get into <em>what</em> to code. The programming ecosystem is quite large and somewhat diverse, especially in the realm of editors/IDEs. Below, I will outline what seems to work best for me &amp; my students and I will provide pertinent, curated learning materials that will hopefully help you get started and be productive. If you have had better luck along the way with different tools, please feel free to share! Please also be aware that I code in Windows 10, so you will have to modify your downloads for your OS. Please, please don’t just glance at the educational material provided below. Really take the time to learn each tool. I am speaking from the school of hard knocks here as I wasn’t always diligent and I paid the price in frustration later as I would go back and find the answer in the material. </p>\n<h3 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h3><ul>\n<li>IDE: <a href=\"http://www.jetbrains.com/idea/download\">IntelliJ IDEa Ultimate</a> - There are a LOT of editors/IDEs out there (Sublime, Atom, etc.) and the Ultimate edition of IntelliJ is not cheap, but I feel like it is a work of art. With wonderful plugins, support for a lot of bleeding-edge web tech, and a large support pool on the interwebs it is my go-to IDE for all of my programming. Heck, they now even support Perl with a plugin! Learn <a href=\"http://blog.jetbrains.com/idea/2015/06/new-courseware-for-intellij-idea/\">HERE</a>.</li>\n<li>Editor: <a href=\"http://notepad-plus-plus.org/download/v7.3.3.html\">Notepad++</a> - When I need to quick-open/edit a file, this is the tool I turn to. It has plenty of themes &amp; plugins to make you happy and they are now <a href=\"http://notepad-plus-plus.org/news/notepad-7.3.3-fix-cia-hacking-issue.html\">CIA proof</a>.</li>\n<li><a href=\"git-scm.com/download/win\">Git for Windows</a> - This tool is needed to keep track of the changes you make to your programming files. Learn <a href=\"http://www.udacity.com/course/how-to-use-git-and-github--ud775\">HERE</a>.<br><em><a href=\"http://desktop.github.com\">GitHub Desktop</a> - Additional utility you can use to publish the repositories you create with Git to the web.\n</em><a href=\"http://nodejs.org\">Node.js</a> - This is the engine that web browsers use to compile the JavaScript code that you write for webpages. They ripped it out, souped it up, and provied it for computers to utilize <em>outside the browser!</em></li>\n<li><a href=\"https://www.google.com/intl/en/chrome/browser/desktop/index.html?standalone=1\">Google Chrome</a> - Indespensible web browser because of it’s support of language features but <em><strong>ESPECIALLY</strong></em> because of its <a href=\"https://developers.google.com/web/tools/chrome-devtools/\">developer tools</a>!</li>\n<li>IntelliJ plugins - At a minimum I recommend these: .ignore, CSS support, EJS, ESLint, Floobits, Git, Github, JavaScript, &amp; NodeJS. I also like the Material Theme.</li>\n<li>Global NPM modules - Use NPM to install these globally: npm install -g PM2, ESLint</li>\n<li>Chrome Application: <a href=\"http://chrome.google.com/webstore/detail/web-server-for-chrome/ofhbbkphhbklhfoeikjpcbhemlocgigb\">Web server for Chrome</a> - Really handy for viewing your static web files locally.</li>\n<li>SCSS transpiler <a href=\"http://koala-app.com/\">Koala</a> - VERY easy SCSS to CSS transpiler (converts SCSS to CSS). I will cover this in a later post.</li>\n</ul>\n<h3 id=\"Sites\"><a href=\"#Sites\" class=\"headerlink\" title=\"Sites\"></a>Sites</h3><ul>\n<li>The PREMIER static learning resource on the whole of the internet (IMHO) is the <a href=\"https://developer.mozilla.org/en-US/docs/Web\">Mozilla Developer Network (MDN)</a>. This should be your default reference.</li>\n<li><a href=\"http://stackoverflow.com\">StackOverflow</a> - THE sitefor getting questions answered, but beware: Be sure you’ve exhausted all of your other resources 1st before asking a question here lest you find yourself kicked into a donkey rape-pit of disdain from the elite users of the site.</li>\n<li><a href=\"https://hashnode.com/\">HashNode</a> - A more gentle, but less effective question answering site.</li>\n<li>Reddit - <a href=\"https://www.reddit.com/r/webdev/\">r/webdev</a>, <a href=\"https://www.reddit.com/r/javascript/\">r/javascript</a>, <a href=\"https://www.reddit.com/r/learnjavascript/\">r/learnjavascript</a> are all indispensable resources!</li>\n</ul>\n<p>That should be WAY more than enough stuff to explore and install to get you up and running so you can start coding!</p>\n"},{"title":"Learning to Learn","date":"2017-03-14T14:47:16.000Z","_content":"\nBefore we jump into the actual meat & potatos, I want to present a small aside on how to learn. Head First Labs has a really interesting approach to how the brain retains material over at their [Theory/Formula page](http://www.headfirstlabs.com/about.php). Additionally, Coursera has a whole [course](https://www.coursera.org/learn/learning-how-to-learn) dedicated to this topic that was nicely summed up in this [Reddit post](https://www.reddit.com/r/GetMotivated/comments/5950tm/text_i_just_finished_the_online_coursera_course/?utm_content=title&utm_medium=front&utm_source=reddit&utm_name=GetMotivated).\n\nAfter you've investigated the above, we'll jump right into HTML!","source":"_posts/Learning-to-Learn.md","raw":"---\ntitle: Learning to Learn\ndate: 2017-03-14 10:47:16\ntags:\n---\n\nBefore we jump into the actual meat & potatos, I want to present a small aside on how to learn. Head First Labs has a really interesting approach to how the brain retains material over at their [Theory/Formula page](http://www.headfirstlabs.com/about.php). Additionally, Coursera has a whole [course](https://www.coursera.org/learn/learning-how-to-learn) dedicated to this topic that was nicely summed up in this [Reddit post](https://www.reddit.com/r/GetMotivated/comments/5950tm/text_i_just_finished_the_online_coursera_course/?utm_content=title&utm_medium=front&utm_source=reddit&utm_name=GetMotivated).\n\nAfter you've investigated the above, we'll jump right into HTML!","slug":"Learning-to-Learn","published":1,"updated":"2017-03-14T14:56:22.370Z","_id":"cj09ntns000035kac1sxk32nj","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Before we jump into the actual meat &amp; potatos, I want to present a small aside on how to learn. Head First Labs has a really interesting approach to how the brain retains material over at their <a href=\"http://www.headfirstlabs.com/about.php\" target=\"_blank\" rel=\"external\">Theory/Formula page</a>. Additionally, Coursera has a whole <a href=\"https://www.coursera.org/learn/learning-how-to-learn\" target=\"_blank\" rel=\"external\">course</a> dedicated to this topic that was nicely summed up in this <a href=\"https://www.reddit.com/r/GetMotivated/comments/5950tm/text_i_just_finished_the_online_coursera_course/?utm_content=title&amp;utm_medium=front&amp;utm_source=reddit&amp;utm_name=GetMotivated\" target=\"_blank\" rel=\"external\">Reddit post</a>.</p>\n<p>After you’ve investigated the above, we’ll jump right into HTML!</p>\n","excerpt":"","more":"<p>Before we jump into the actual meat &amp; potatos, I want to present a small aside on how to learn. Head First Labs has a really interesting approach to how the brain retains material over at their <a href=\"http://www.headfirstlabs.com/about.php\">Theory/Formula page</a>. Additionally, Coursera has a whole <a href=\"https://www.coursera.org/learn/learning-how-to-learn\">course</a> dedicated to this topic that was nicely summed up in this <a href=\"https://www.reddit.com/r/GetMotivated/comments/5950tm/text_i_just_finished_the_online_coursera_course/?utm_content=title&amp;utm_medium=front&amp;utm_source=reddit&amp;utm_name=GetMotivated\">Reddit post</a>.</p>\n<p>After you’ve investigated the above, we’ll jump right into HTML!</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}